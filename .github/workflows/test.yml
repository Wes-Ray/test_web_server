name: CI
on: [push, pull_request]
jobs:
  deploy:
    name: "Deploy to staging"
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.STAGING_SSH_USER }}
          SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
          SSH_HOST: ${{ secrets.STAGING_SSH_HOST }}
      
      - name: Test echo to tmp
        # run: ssh staging 'touch /tmp/test_touch01'
        run: ssh staging 'cd /tmp'

      # - name: Stop the server
      #   run: ssh staging 'sudo systemctl stop my-application'

      # - name: Check out the source
      #   run: ssh staging 'cd my-application && git fetch && git reset --hard origin/master'

      # - name: Start the server
      #   if: ${{ always() }}
      #   run: ssh staging 'sudo systemctl start my-application'




################### OLD

# name: CI
# on: [push]
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - run: >
#           mkdir -p ~/.ssh/
#           echo "$SSH_KEY" > ~/.ssh/staging.key
#           chmod 600 ~/.ssh/staging.key
#           cat >>~/.ssh/config <<END
#           Host staging
#             HostName $SSH_HOST
#             User $SSH_USER
#             IdentityFile ~/.ssh/staging.key
#             StrictHostKeyChecking no
#           END
#         env:
#           SSH_USER: ${{ secrets.SSH_USER }}
#           SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#           SSH_HOST: ${{ secrets.SSH_HOST }}
    
#         # - run: ssh staging 'touch test_ssh_touch'

#     #   # - name: Stop the server
#     #   #   run: ssh staging 'sudo systemctl stop my-application'

#     #   # - name: Check out the source
#     #   #   run: ssh staging 'cd my-application && git fetch && git reset --hard origin/master'

#     #   # - name: Start the server
#     #   #   if: ${{ always() }}
#     #   #   run: ssh staging 'sudo systemctl start my-application'